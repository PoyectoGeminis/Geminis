Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:flutter_localizations/flutter_localizations.dart';\r\nimport 'package:proyectopersonal/Pages/Login_Page.dart';\r\nimport 'package:proyectopersonal/Pages/Register_Page.dart';\r\n\r\nimport 'Pages/Splach_Page.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'GenesisTours',\r\n      localizationsDelegates: const[\r\n        GlobalWidgetsLocalizations.delegate,\r\n        GlobalWidgetsLocalizations.delegate,\r\n      ],\r\n      supportedLocales: const[\r\n        Locale(\"es\", \"CO\"),\r\n        Locale(\"en\", \"US\"),\r\n      ],\r\n      theme: ThemeData(\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: Container(\r\n        decoration: BoxDecoration(\r\n            image: DecorationImage(\r\n                image: AssetImage(\"Assets/Imagenes/img_2.png\")\r\n            )\r\n        ),\r\n        child: Scaffold(\r\n          backgroundColor: Colors.transparent,\r\n          body: const SplashPage(),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n\r\n
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
--- a/lib/main.dart	
+++ b/lib/main.dart	
@@ -1,8 +1,10 @@
 import 'package:flutter/material.dart';
 import 'package:flutter_localizations/flutter_localizations.dart';
 import 'package:proyectopersonal/Pages/Login_Page.dart';
+import 'package:proyectopersonal/Pages/Mi_Sitios_Tutristicos.dart';
 import 'package:proyectopersonal/Pages/Register_Page.dart';
 
+import 'Pages/ListadeSitios.dart';
 import 'Pages/Splach_Page.dart';
 
 void main() {
Index: lib/Pages/Register_Page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:intl/intl.dart';\r\n//import 'package:shared_preferences/shared_preferences.dart';\r\n\r\nclass RegisterPage extends StatefulWidget {\r\n  const RegisterPage({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<RegisterPage> createState() => _RegisterPageState();\r\n}\r\nenum Genre{masculino,femenino}\r\n\r\nclass _RegisterPageState extends State<RegisterPage> {\r\n  final _name=TextEditingController();\r\n  final _email=TextEditingController();\r\n  final _password=TextEditingController();\r\n  final _repPassword=TextEditingController();\r\n\r\n  String data=\"Informacion\";\r\n\r\n  Genre?_genre=Genre.masculino;\r\n\r\n  void _showMsg(BuildContext context, String msg){\r\n    final scaffold = ScaffoldMessenger.of(context);\r\n    scaffold.showSnackBar(\r\n        SnackBar(\r\n          content: Text(msg),\r\n          action: SnackBarAction(\r\n              label: \"Aceptar\", onPressed: scaffold.hideCurrentSnackBar),\r\n        ),\r\n    );\r\n  }\r\n\r\n  void _onRegisterButtonClickend(){\r\n    setState(() {\r\n      if(_password.text == _repPassword){\r\n      String genre=\"Masculino\";\r\n      if (_genre==Genre.femenino){\r\n        genre=\"Femenino\";\r\n      }\r\n      data=\r\n      \"Nombre: ${_name.text} \"\r\n          \"\\nEmail: ${_email.text} \"\r\n          \"\\nGénero: $genre\";\r\n    }\r\n      else{\r\n        _showMsg(context, \"Las contraseñas deben de ser iguales\");\r\n      }\r\n    });\r\n\r\n  }\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Padding(\r\n        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 16),\r\n        child: Center(\r\n          child: SingleChildScrollView(\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: <Widget> [\r\n                const Image(\r\n                image: AssetImage(\"Assets/Imagenes/vuelo-en-avion.png\"),\r\n                ),\r\n                const SizedBox(\r\n                  height: 14.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _name,\r\n                  decoration: const InputDecoration(\r\n                    border: OutlineInputBorder(),\r\n                    labelText: \"Nombre\",\r\n                  ),\r\n                  keyboardType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _email,\r\n                  decoration: const InputDecoration(\r\n                      border: OutlineInputBorder(),\r\n                      labelText: \"Correo Electronico\"\r\n                  ),\r\n                  keyboardType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _password,\r\n                  decoration: const InputDecoration(\r\n                      border: OutlineInputBorder(),\r\n                      labelText: \"Contraseña\"\r\n                  ),\r\n                  keyboardType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _repPassword,\r\n                  decoration: const InputDecoration(\r\n                      border: OutlineInputBorder(),\r\n                      labelText: \"Repita Contraseña\"\r\n                  ),\r\n                  keyboardType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                Row(\r\n                  children: [\r\n                    Expanded(\r\n                      child: ListTile(\r\n                        title: const Text(\"Masculino\"),\r\n                        leading: Radio<Genre>(\r\n                          value: Genre.masculino,\r\n                          groupValue: _genre,\r\n                          onChanged: (Genre? value){\r\n                            setState(() {\r\n                              _genre=value;\r\n                            });\r\n                          },\r\n                        ),\r\n                      ),\r\n                    ),\r\n                    Expanded(\r\n                      child: ListTile(\r\n                        title: const Text(\"Femenino\"),\r\n                        leading: Radio<Genre>(\r\n                          value: Genre.femenino,\r\n                          groupValue: _genre,\r\n                          onChanged: (Genre? value){\r\n                            setState(() {\r\n                              _genre=value;\r\n                            });\r\n                          },\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n                ElevatedButton(\r\n                  style: TextButton.styleFrom(\r\n                    textStyle: const TextStyle(fontSize: 16),\r\n                  ),\r\n                  onPressed: (){\r\n                    _onRegisterButtonClickend();\r\n                  },\r\n                  child: const Text(\"Registrar\")),\r\n              Text(\r\n                data,\r\n                style: const TextStyle(\r\n                  fontSize: 12,\r\n                  fontStyle: FontStyle.italic)\r\n              ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n\r\n
===================================================================
diff --git a/lib/Pages/Register_Page.dart b/lib/Pages/Register_Page.dart
--- a/lib/Pages/Register_Page.dart	
+++ b/lib/Pages/Register_Page.dart	
@@ -1,6 +1,10 @@
 import 'package:flutter/material.dart';
 import 'package:intl/intl.dart';
-//import 'package:shared_preferences/shared_preferences.dart';
+import 'package:proyectopersonal/Pages/Login_Page.dart';
+import '../Modelos/Users.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+import 'dart:convert';
+import '../Repository/firebase_api.dart';
 
 class RegisterPage extends StatefulWidget {
   const RegisterPage({Key? key}) : super(key: key);
@@ -11,6 +15,9 @@
 enum Genre{masculino,femenino}
 
 class _RegisterPageState extends State<RegisterPage> {
+
+  final FirebaseApi _firebaseApi = FirebaseApi();
+
   final _name=TextEditingController();
   final _email=TextEditingController();
   final _password=TextEditingController();
@@ -20,34 +27,62 @@
 
   Genre?_genre=Genre.masculino;
 
-  void _showMsg(BuildContext context, String msg){
+  void _showMsg(String msg){
     final scaffold = ScaffoldMessenger.of(context);
     scaffold.showSnackBar(
-        SnackBar(
-          content: Text(msg),
-          action: SnackBarAction(
-              label: "Aceptar", onPressed: scaffold.hideCurrentSnackBar),
-        ),
+      SnackBar(
+        content: Text(msg),
+        action: SnackBarAction(
+            label: "Aceptar", onPressed: scaffold.hideCurrentSnackBar),
+      ),
     );
   }
 
+  void _saveUser(User user) async{
+    var result = await _firebaseApi.createUser(user);
+    Navigator.pushReplacement(
+        context, MaterialPageRoute(builder: (context) => const LoginPage()));
+  }
+
+  void _registerUser(User user) async{
+    //SharedPreferences prefs = await SharedPreferences.getInstance();
+    //prefs.setString("user", jsonEncode(user));
+    var result = await _firebaseApi.registerUser(user.email, user.password);
+    String msg = "";
+    if (result == 'invalid-email'){
+      msg = "El correo electrónico está mal escrito";
+    } else if (result == "email-already-in-use"){
+      msg = "Ya existe una cuenta con este correo electrónico";
+    }else if (result == "waek-password") {
+      msg = "Debe utilizar una contraseña de minimo 6 digitos";
+    } else if (result == "network-request-failed"){
+      msg = "Revise su conexión a intenet";
+    } else {
+      msg = "Usuario registrado con exito";
+      user.uid = result;
+      _saveUser(user);
+    }
+    _showMsg(msg);
+    if (msg == "Usuario registrado con exito"){
+      Navigator.pushReplacement(
+          context, MaterialPageRoute(builder: (context) => const LoginPage()));
+    }
+  }
+
   void _onRegisterButtonClickend(){
     setState(() {
-      if(_password.text == _repPassword){
-      String genre="Masculino";
-      if (_genre==Genre.femenino){
-        genre="Femenino";
-      }
-      data=
-      "Nombre: ${_name.text} "
-          "\nEmail: ${_email.text} "
-          "\nGénero: $genre";
-    }
-      else{
-        _showMsg(context, "Las contraseñas deben de ser iguales");
+      if(_password.text == _repPassword.text) {
+        String genre = "Masculino";
+        if (_genre == Genre.femenino) {
+          genre = "Femenino";
+        }
+
+        var user = User("",_name.text,_email.text,_password.text, genre);
+        _registerUser(user);
+      } else{
+        _showMsg("Las contraseñas deben ser iguales");
       }
     });
-
   }
   @override
   Widget build(BuildContext context) {
@@ -60,7 +95,7 @@
               mainAxisAlignment: MainAxisAlignment.center,
               children: <Widget> [
                 const Image(
-                image: AssetImage("Assets/Imagenes/vuelo-en-avion.png"),
+                  image: AssetImage("Assets/Imagenes/vuelo-en-avion.png"),
                 ),
                 const SizedBox(
                   height: 14.0,
@@ -141,20 +176,39 @@
                     ),
                   ],
                 ),
-                ElevatedButton(
-                  style: TextButton.styleFrom(
-                    textStyle: const TextStyle(fontSize: 16),
-                  ),
-                  onPressed: (){
-                    _onRegisterButtonClickend();
-                  },
-                  child: const Text("Registrar")),
-              Text(
-                data,
-                style: const TextStyle(
-                  fontSize: 12,
-                  fontStyle: FontStyle.italic)
-              ),
+                Row(
+                  children: [
+                    Expanded(
+                      child: ElevatedButton(
+                          style: TextButton.styleFrom(
+                            textStyle: const TextStyle(fontSize: 16),
+                          ),
+                          onPressed: (){
+                            _onRegisterButtonClickend();
+                          },
+                          child: const Text("Registrar"),
+                      ),
+                    ),
+                    Expanded(
+                      child: ElevatedButton(
+                          style: TextButton.styleFrom(
+                            backgroundColor: Colors.blue,
+                          ),
+                          child: Text("Volver",
+                            style:TextStyle(
+                                fontSize: 22,
+                                color: Colors.white,
+                                fontFamily: "contenidos"
+                            ),
+                          ),
+                          onPressed: (){
+                            Navigator.push(context, MaterialPageRoute(builder: (context) => LoginPage())
+                            );
+                          }
+                      ),
+                    )
+                  ],
+                ),
               ],
             ),
           ),
Index: lib/Modelos/Users.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class User{\r\n  var _name;\r\n  var _email;\r\n  var _password;\r\n  var _genre;\r\n\r\n  User(this._name, this._email, this._password, this._genre);\r\n\r\n  get name => _name;\r\n\r\n  set name(value) {\r\n    _name = value;\r\n  }\r\n\r\n  get email => _email;\r\n\r\n  get genre => _genre;\r\n\r\n  set genre(value) {\r\n    _genre = value;\r\n  }\r\n\r\n  get password => _password;\r\n\r\n  set password(value) {\r\n    _password = value;\r\n  }\r\n\r\n  set email(value) {\r\n    _email = value;\r\n  }\r\n}\r\n
===================================================================
diff --git a/lib/Modelos/Users.dart b/lib/Modelos/Users.dart
--- a/lib/Modelos/Users.dart	
+++ b/lib/Modelos/Users.dart	
@@ -1,10 +1,34 @@
 class User{
+  var _uid;
   var _name;
   var _email;
   var _password;
   var _genre;
 
-  User(this._name, this._email, this._password, this._genre);
+  User(this._uid, this._name, this._email, this._password, this._genre);
+
+  User.Empty();
+
+  User.fromJson(Map<String, dynamic> json)
+      : _uid = json["uid"],
+        _name = json["name"],
+        _email= json ["email"],
+        _password = json ["password"],
+        _genre= json ["genre"];
+
+  Map<String, dynamic> toJson() => {
+    "uid": _uid,
+    "name": _name,
+    "email": _email,
+    "password": _password,
+    "genre": _genre,
+  };
+
+  get uid => _uid;
+
+  set uid(value) {
+    _uid = value;
+  }
 
   get name => _name;
 
Index: android/app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def localProperties = new Properties()\r\ndef localPropertiesFile = rootProject.file('local.properties')\r\nif (localPropertiesFile.exists()) {\r\n    localPropertiesFile.withReader('UTF-8') { reader ->\r\n        localProperties.load(reader)\r\n    }\r\n}\r\n\r\ndef flutterRoot = localProperties.getProperty('flutter.sdk')\r\nif (flutterRoot == null) {\r\n    throw new GradleException(\"Flutter SDK not found. Define location with flutter.sdk in the local.properties file.\")\r\n}\r\n\r\ndef flutterVersionCode = localProperties.getProperty('flutter.versionCode')\r\nif (flutterVersionCode == null) {\r\n    flutterVersionCode = '1'\r\n}\r\n\r\ndef flutterVersionName = localProperties.getProperty('flutter.versionName')\r\nif (flutterVersionName == null) {\r\n    flutterVersionName = '1.0'\r\n}\r\n\r\napply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply from: \"$flutterRoot/packages/flutter_tools/gradle/flutter.gradle\"\r\n\r\nandroid {\r\n    compileSdkVersion flutter.compileSdkVersion\r\n    ndkVersion flutter.ndkVersion\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n\r\n    sourceSets {\r\n        main.java.srcDirs += 'src/main/kotlin'\r\n    }\r\n\r\n    defaultConfig {\r\n        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\r\n        applicationId \"com.example.proyectopersonal\"\r\n        // You can update the following values to match your application needs.\r\n        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.\r\n        minSdkVersion flutter.minSdkVersion\r\n        targetSdkVersion flutter.targetSdkVersion\r\n        versionCode flutterVersionCode.toInteger()\r\n        versionName flutterVersionName\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            // TODO: Add your own signing config for the release build.\r\n            // Signing with the debug keys for now, so `flutter run --release` works.\r\n            signingConfig signingConfigs.debug\r\n        }\r\n    }\r\n}\r\n\r\nflutter {\r\n    source '../..'\r\n}\r\n\r\ndependencies {\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n}\r\n
===================================================================
diff --git a/android/app/build.gradle b/android/app/build.gradle
--- a/android/app/build.gradle	
+++ b/android/app/build.gradle	
@@ -47,10 +47,11 @@
         applicationId "com.example.proyectopersonal"
         // You can update the following values to match your application needs.
         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
-        minSdkVersion flutter.minSdkVersion
+        minSdkVersion 19
         targetSdkVersion flutter.targetSdkVersion
         versionCode flutterVersionCode.toInteger()
         versionName flutterVersionName
+        multiDexEnabled true
     }
 
     buildTypes {
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\r\n# See https://dart.dev/tools/pub/glossary#lockfile\r\npackages:\r\n  async:\r\n    dependency: transitive\r\n    description:\r\n      name: async\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.9.0\"\r\n  boolean_selector:\r\n    dependency: transitive\r\n    description:\r\n      name: boolean_selector\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.1.0\"\r\n  characters:\r\n    dependency: transitive\r\n    description:\r\n      name: characters\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  clock:\r\n    dependency: transitive\r\n    description:\r\n      name: clock\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  collection:\r\n    dependency: transitive\r\n    description:\r\n      name: collection\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.16.0\"\r\n  cupertino_icons:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: cupertino_icons\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.0.5\"\r\n  fake_async:\r\n    dependency: transitive\r\n    description:\r\n      name: fake_async\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.3.1\"\r\n  flutter:\r\n    dependency: \"direct main\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_lints:\r\n    dependency: \"direct dev\"\r\n    description:\r\n      name: flutter_lints\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  flutter_localizations:\r\n    dependency: \"direct main\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  flutter_test:\r\n    dependency: \"direct dev\"\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.0\"\r\n  intl:\r\n    dependency: \"direct main\"\r\n    description:\r\n      name: intl\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"0.17.0\"\r\n  lints:\r\n    dependency: transitive\r\n    description:\r\n      name: lints\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.0.1\"\r\n  matcher:\r\n    dependency: transitive\r\n    description:\r\n      name: matcher\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"0.12.12\"\r\n  material_color_utilities:\r\n    dependency: transitive\r\n    description:\r\n      name: material_color_utilities\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"0.1.5\"\r\n  meta:\r\n    dependency: transitive\r\n    description:\r\n      name: meta\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.8.0\"\r\n  path:\r\n    dependency: transitive\r\n    description:\r\n      name: path\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.8.2\"\r\n  sky_engine:\r\n    dependency: transitive\r\n    description: flutter\r\n    source: sdk\r\n    version: \"0.0.99\"\r\n  source_span:\r\n    dependency: transitive\r\n    description:\r\n      name: source_span\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.9.0\"\r\n  stack_trace:\r\n    dependency: transitive\r\n    description:\r\n      name: stack_trace\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.10.0\"\r\n  stream_channel:\r\n    dependency: transitive\r\n    description:\r\n      name: stream_channel\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.1.0\"\r\n  string_scanner:\r\n    dependency: transitive\r\n    description:\r\n      name: string_scanner\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.1.1\"\r\n  term_glyph:\r\n    dependency: transitive\r\n    description:\r\n      name: term_glyph\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"1.2.1\"\r\n  test_api:\r\n    dependency: transitive\r\n    description:\r\n      name: test_api\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"0.4.12\"\r\n  vector_math:\r\n    dependency: transitive\r\n    description:\r\n      name: vector_math\r\n      url: \"https://pub.dartlang.org\"\r\n    source: hosted\r\n    version: \"2.1.2\"\r\nsdks:\r\n  dart: \">=2.18.2 <3.0.0\"\r\n
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
--- a/pubspec.lock	
+++ b/pubspec.lock	
@@ -1,6 +1,13 @@
 # Generated by pub
 # See https://dart.dev/tools/pub/glossary#lockfile
 packages:
+  _flutterfire_internals:
+    dependency: transitive
+    description:
+      name: _flutterfire_internals
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.7"
   async:
     dependency: transitive
     description:
@@ -29,6 +36,27 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.1.1"
+  cloud_firestore:
+    dependency: "direct main"
+    description:
+      name: cloud_firestore
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.4"
+  cloud_firestore_platform_interface:
+    dependency: transitive
+    description:
+      name: cloud_firestore_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.8.4"
+  cloud_firestore_web:
+    dependency: transitive
+    description:
+      name: cloud_firestore_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.4"
   collection:
     dependency: transitive
     description:
@@ -50,6 +78,62 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.3.1"
+  ffi:
+    dependency: transitive
+    description:
+      name: ffi
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "6.1.4"
+  firebase_auth:
+    dependency: "direct main"
+    description:
+      name: firebase_auth
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.1.1"
+  firebase_auth_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_auth_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "6.11.1"
+  firebase_auth_web:
+    dependency: transitive
+    description:
+      name: firebase_auth_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.1.1"
+  firebase_core:
+    dependency: "direct main"
+    description:
+      name: firebase_core
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  firebase_core_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_core_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.5.2"
+  firebase_core_web:
+    dependency: transitive
+    description:
+      name: firebase_core_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -67,11 +151,30 @@
     description: flutter
     source: sdk
     version: "0.0.0"
+  flutter_rating_bar:
+    dependency: "direct main"
+    description:
+      name: flutter_rating_bar
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.1"
   flutter_test:
     dependency: "direct dev"
     description: flutter
     source: sdk
     version: "0.0.0"
+  flutter_web_plugins:
+    dependency: transitive
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  http_parser:
+    dependency: transitive
+    description:
+      name: http_parser
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.2"
   intl:
     dependency: "direct main"
     description:
@@ -79,6 +182,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "0.17.0"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.4"
   lints:
     dependency: transitive
     description:
@@ -114,6 +224,104 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.8.2"
+  path_provider_linux:
+    dependency: transitive
+    description:
+      name: path_provider_linux
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.7"
+  path_provider_platform_interface:
+    dependency: transitive
+    description:
+      name: path_provider_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.5"
+  path_provider_windows:
+    dependency: transitive
+    description:
+      name: path_provider_windows
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.3"
+  platform:
+    dependency: transitive
+    description:
+      name: platform
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.0"
+  plugin_platform_interface:
+    dependency: transitive
+    description:
+      name: plugin_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.3"
+  process:
+    dependency: transitive
+    description:
+      name: process
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.2.4"
+  shared_preferences:
+    dependency: "direct main"
+    description:
+      name: shared_preferences
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.15"
+  shared_preferences_android:
+    dependency: transitive
+    description:
+      name: shared_preferences_android
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.14"
+  shared_preferences_ios:
+    dependency: transitive
+    description:
+      name: shared_preferences_ios
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  shared_preferences_linux:
+    dependency: transitive
+    description:
+      name: shared_preferences_linux
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  shared_preferences_macos:
+    dependency: transitive
+    description:
+      name: shared_preferences_macos
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.4"
+  shared_preferences_platform_interface:
+    dependency: transitive
+    description:
+      name: shared_preferences_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0"
+  shared_preferences_web:
+    dependency: transitive
+    description:
+      name: shared_preferences_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.4"
+  shared_preferences_windows:
+    dependency: transitive
+    description:
+      name: shared_preferences_windows
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -161,6 +369,13 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "0.4.12"
+  typed_data:
+    dependency: transitive
+    description:
+      name: typed_data
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.1"
   vector_math:
     dependency: transitive
     description:
@@ -168,5 +383,20 @@
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.1.2"
+  win32:
+    dependency: transitive
+    description:
+      name: win32
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.1"
+  xdg_directories:
+    dependency: transitive
+    description:
+      name: xdg_directories
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.0+2"
 sdks:
   dart: ">=2.18.2 <3.0.0"
+  flutter: ">=3.0.0"
Index: pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: proyectopersonal\r\ndescription: A new Flutter project.\r\n\r\n# The following line prevents the package from being accidentally published to\r\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\r\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\r\n\r\n# The following defines the version and build number for your application.\r\n# A version number is three numbers separated by dots, like 1.2.43\r\n# followed by an optional build number separated by a +.\r\n# Both the version and the builder number may be overridden in flutter\r\n# build by specifying --build-name and --build-number, respectively.\r\n# In Android, build-name is used as versionName while build-number used as versionCode.\r\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\r\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\r\n# Read more about iOS versioning at\r\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\r\n# In Windows, build-name is used as the major, minor, and patch parts\r\n# of the product and file versions while build-number is used as the build suffix.\r\nversion: 1.0.0+1\r\n\r\nenvironment:\r\n  sdk: '>=2.18.2 <3.0.0'\r\n\r\n# Dependencies specify other packages that your package needs in order to work.\r\n# To automatically upgrade your package dependencies to the latest versions\r\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\r\n# dependencies can be manually updated by changing the version numbers below to\r\n# the latest version available on pub.dev. To see which dependencies have newer\r\n# versions available, run `flutter pub outdated`.\r\ndependencies:\r\n#  shared_predeferences: 2.0.15\r\n  intl: ^0.17.0\r\n  flutter:\r\n    sdk: flutter\r\n  flutter_localizations:\r\n    sdk: flutter\r\n\r\n\r\n  # The following adds the Cupertino Icons font to your application.\r\n  # Use with the CupertinoIcons class for iOS style icons.\r\n  cupertino_icons: ^1.0.2\r\n\r\ndev_dependencies:\r\n  flutter_test:\r\n    sdk: flutter\r\n\r\n  # The \"flutter_lints\" package below contains a set of recommended lints to\r\n  # encourage good coding practices. The lint set provided by the package is\r\n  # activated in the `analysis_options.yaml` file located at the root of your\r\n  # package. See that file for information about deactivating specific lint\r\n  # rules and activating additional ones.\r\n  flutter_lints: ^2.0.0\r\n\r\n# For information on the generic Dart part of this file, see the\r\n# following page: https://dart.dev/tools/pub/pubspec\r\n\r\n# The following section is specific to Flutter packages.\r\nflutter:\r\n\r\n  # The following line ensures that the Material Icons font is\r\n  # included with your application, so that you can use the icons in\r\n  # the material Icons class.\r\n  uses-material-design: true\r\n\r\n  # To add assets to your application, add an assets section, like this:\r\n  assets:\r\n     - Assets/Imagenes/\r\n  #   - images/a_dot_ham.jpeg\r\n\r\n  # An image asset can refer to one or more resolution-specific \"variants\", see\r\n  # https://flutter.dev/assets-and-images/#resolution-aware\r\n\r\n  # For details regarding adding assets from package dependencies, see\r\n  # https://flutter.dev/assets-and-images/#from-packages\r\n\r\n  # To add custom fonts to your application, add a fonts section here,\r\n  # in this \"flutter\" section. Each entry in this list should have a\r\n  # \"family\" key with the font family name, and a \"fonts\" key with a\r\n  # list giving the asset and other descriptors for the font. For\r\n  # example:\r\n  fonts:\r\n    - family: Titulos\r\n      fonts:\r\n        - asset: Assets/Fonts/Salad-Regular-trial.ttf\r\n  #       - asset: fonts/Schyler-Italic.ttf\r\n  #         style: italic\r\n  #   - family: Trajan Pro\r\n  #     fonts:\r\n  #       - asset: fonts/TrajanPro.ttf\r\n  #       - asset: fonts/TrajanPro_Bold.ttf\r\n  #         weight: 700\r\n  #\r\n  # For details regarding fonts from package dependencies,\r\n  # see https://flutter.dev/custom-fonts/#from-packages\r\n
===================================================================
diff --git a/pubspec.yaml b/pubspec.yaml
--- a/pubspec.yaml	
+++ b/pubspec.yaml	
@@ -29,7 +29,9 @@
 # the latest version available on pub.dev. To see which dependencies have newer
 # versions available, run `flutter pub outdated`.
 dependencies:
-#  shared_predeferences: 2.0.15
+  firebase_core: ^2.1.1
+  shared_preferences: 2.0.15
+  flutter_rating_bar: ^4.0.1
   intl: ^0.17.0
   flutter:
     sdk: flutter
@@ -40,6 +42,8 @@
   # The following adds the Cupertino Icons font to your application.
   # Use with the CupertinoIcons class for iOS style icons.
   cupertino_icons: ^1.0.2
+  firebase_auth: ^4.1.0
+  cloud_firestore: ^4.0.3
 
 dev_dependencies:
   flutter_test:
@@ -65,7 +69,7 @@
 
   # To add assets to your application, add an assets section, like this:
   assets:
-     - Assets/Imagenes/
+    - Assets/Imagenes/
   #   - images/a_dot_ham.jpeg
 
   # An image asset can refer to one or more resolution-specific "variants", see
Index: lib/Pages/Home_Page.dart
===================================================================
diff --git a/lib/Pages/Home_Page.dart b/lib/Sitios Turisticos/Poi_Page2.dart
rename from lib/Pages/Home_Page.dart
rename to lib/Sitios Turisticos/Poi_Page2.dart
--- a/lib/Pages/Home_Page.dart	
+++ b/lib/Sitios Turisticos/Poi_Page2.dart	
@@ -1,0 +1,73 @@
+import 'package:flutter/material.dart';
+import 'package:proyectopersonal/Pages/ListadeSitios.dart';
+
+class Poi2 extends StatelessWidget {
+  const Poi2({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return MaterialApp(
+      home: Scaffold(
+        body: Column(
+          children: [
+            Container(
+              width: 300,
+              height: 80,
+              margin: EdgeInsets.only(top: 70),
+              child: Text("Tutunendo",
+                style: TextStyle(
+                  fontSize: 30,
+                  fontFamily: "Titulos",
+                  // color: Colors.black
+                ),
+                textAlign: TextAlign.center,
+              ),
+            ),
+            Container(
+              width: 300,
+              height: 200,
+              decoration: BoxDecoration(
+                image: DecorationImage(
+                    image: AssetImage("Assets/Imagenes/tutunendo.png")
+                ),
+              ),
+            ),
+
+            Container(
+              width: 350,
+              height: 300,
+              margin: EdgeInsets.only(left: 15,top: 10),
+              child: Text("Ciudad: Quibdó\n"
+                  "Departamento: Chocó\n"
+                  "Temperatura: 25°\n"
+                  "\n"
+                  "Descripcion: Tutunendo es un corregimiento colombiano del municipio de Quibdó, ubicado en el departamento del Chocó. Se encuentra a 14 km de Quibdó, por la vía Quibdó-Medellín. Declarado sitio de mayor pluviosidad y Biodiverso, con una población aproximada de 3.500 habitantes.",
+                style: TextStyle(
+                  fontSize: 19,
+                ),
+              ),
+            ),
+            Container(
+              child: ElevatedButton(
+                  style: TextButton.styleFrom(
+                    backgroundColor: Colors.blue,
+                  ),
+                  child: Text("Volver",
+                    style:TextStyle(
+                        fontSize: 22,
+                        color: Colors.white,
+                        fontFamily: "contenidos"
+                    ),
+                  ),
+                  onPressed: (){
+                    Navigator.push(context, MaterialPageRoute(builder: (context) => Listas_de_Sitios())
+                    );
+                  }
+              ),
+            )
+          ],
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/Pages/Login_Page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:proyectopersonal/Pages/Register_Page.dart';\r\n\r\n\r\nclass LoginPage extends StatefulWidget {\r\n  const LoginPage({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<LoginPage> createState() => _LoginPageState();\r\n}\r\n\r\nclass _LoginPageState extends State<LoginPage> {\r\n\r\n  final _email=TextEditingController();\r\n  final _password=TextEditingController();\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Padding(\r\n        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 16),\r\n        child: Center(\r\n          child: SingleChildScrollView(\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: <Widget>[\r\n                const Image(\r\n                  image: AssetImage(\"Assets/Imagenes/logo_1.png\"),\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _email,\r\n                  decoration: const InputDecoration(\r\n                    border: OutlineInputBorder(),\r\n                    labelText: \"Correo Electrónico\"),\r\n                  keyboardType: TextInputType.emailAddress,\r\n                  ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextFormField(\r\n                  controller: _password,\r\n                  decoration: const InputDecoration(\r\n                      border: OutlineInputBorder(),\r\n                      labelText: \"Contraseña\"),\r\n                  keyboardType: TextInputType.visiblePassword,\r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                ElevatedButton(\r\n                   onPressed: (){\r\n                      user=_email.text;\r\n                      pwd=_password.text;\r\n                      if (user==\"pepe@gmail.com\" && pwd==\"12345\"){\r\n                        Navigator.push(context,\r\n                            MaterialPageRoute(builder:(context)=> Poi()) );\r\n                      }\r\n\r\n                    }, \r\n                ),\r\n                const SizedBox(\r\n                  height: 16.0,\r\n                ),\r\n                TextButton(\r\n                  style: TextButton.styleFrom(\r\n                    textStyle: const TextStyle(\r\n                      fontSize: 16,\r\n                      fontStyle: FontStyle.italic,\r\n                      color: Colors.blue),\r\n                  ),\r\n                  onPressed: (){\r\n                    Navigator.push(context,\r\n                        MaterialPageRoute(builder: (context)=> RegisterPage()));\r\n                  },\r\n                  child: const Text(\"Registrarse\"),\r\n                )\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/lib/Pages/Login_Page.dart b/lib/Pages/Login_Page.dart
--- a/lib/Pages/Login_Page.dart	
+++ b/lib/Pages/Login_Page.dart	
@@ -1,5 +1,11 @@
+import 'dart:convert';
 import 'package:flutter/material.dart';
 import 'package:proyectopersonal/Pages/Register_Page.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+import '../Modelos/Users.dart';
+import 'package:proyectopersonal/Pages/ListadeSitios.dart';
+import '../Repository/firebase_api.dart';
+import 'Mi_Sitios_Tutristicos.dart';
 
 
 class LoginPage extends StatefulWidget {
@@ -14,6 +20,56 @@
   final _email=TextEditingController();
   final _password=TextEditingController();
 
+  User userLoad = User.Empty();
+
+  final FirebaseApi _firebaseApi = FirebaseApi();
+
+  @override
+  void initState(){
+    //getUser();
+    super.initState();
+  }
+
+  getUser() async{
+    SharedPreferences prefs = await SharedPreferences.getInstance();
+    Map<String, dynamic> userMap = jsonDecode(prefs.getString("user")!);
+    userLoad = User.fromJson(userMap);
+  }
+  void _showMsg(String msg){
+    final scaffold = ScaffoldMessenger.of(context);
+    scaffold.showSnackBar(
+      SnackBar(
+        content: Text(msg),
+        action: SnackBarAction(
+            label: "Aceptar", onPressed: scaffold.hideCurrentSnackBar),
+      ),
+    );
+  }
+
+  void _validerUser() async {
+    if (_email.text.isEmpty && _password.text.isEmpty) {
+      _showMsg("Debe digitar el correo y la contraseña");
+    }
+    else {
+      var result = await _firebaseApi.loginUser(_email.text, _password.text);
+      String msg = "";
+      if (result == 'invalid-email') {
+        msg = "El correo electrónico está mal escrito";
+      } else if (result == "wrong-password") {
+        msg = "Correo o Contraseña incorrecta";
+      } else if (result == "network-request-failed") {
+        msg = "Revise su conexión a intenet";
+      } else {
+        msg = "Bienvenido";
+      }
+      _showMsg(msg);
+      if (msg == "Bienvenido") {
+        Navigator.pushReplacement(
+            context, MaterialPageRoute(builder: (context) => const MiSitiosTuristico()));
+      }
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     return Scaffold(
@@ -33,10 +89,10 @@
                 TextFormField(
                   controller: _email,
                   decoration: const InputDecoration(
-                    border: OutlineInputBorder(),
-                    labelText: "Correo Electrónico"),
+                      border: OutlineInputBorder(),
+                      labelText: "Correo Electrónico"),
                   keyboardType: TextInputType.emailAddress,
-                  ),
+                ),
                 const SizedBox(
                   height: 16.0,
                 ),
@@ -51,29 +107,24 @@
                   height: 16.0,
                 ),
                 ElevatedButton(
-                   onPressed: (){
-                      user=_email.text;
-                      pwd=_password.text;
-                      if (user=="pepe@gmail.com" && pwd=="12345"){
-                        Navigator.push(context,
-                            MaterialPageRoute(builder:(context)=> Poi()) );
-                      }
-
-                    }, 
-                ),
+                    onPressed: () {
+                      _validerUser();
+                    },
+                    child: const Text("Iniciar Sesión")),
                 const SizedBox(
                   height: 16.0,
                 ),
                 TextButton(
                   style: TextButton.styleFrom(
                     textStyle: const TextStyle(
-                      fontSize: 16,
-                      fontStyle: FontStyle.italic,
-                      color: Colors.blue),
+                        fontSize: 16,
+                        fontStyle: FontStyle.italic,
+                        color: Colors.blue),
                   ),
-                  onPressed: (){
+                  onPressed: () {
                     Navigator.push(context,
-                        MaterialPageRoute(builder: (context)=> RegisterPage()));
+                        MaterialPageRoute(builder: (context) =>
+                            RegisterPage()));
                   },
                   child: const Text("Registrarse"),
                 )
@@ -84,6 +135,4 @@
       ),
     );
   }
-
-
-}
+}
\ No newline at end of file
Index: lib/Pages/Poi_Page.dart
===================================================================
diff --git a/lib/Pages/Poi_Page.dart b/lib/Sitios Turisticos/Poi_Page.dart
rename from lib/Pages/Poi_Page.dart
rename to lib/Sitios Turisticos/Poi_Page.dart
--- a/lib/Pages/Poi_Page.dart	
+++ b/lib/Sitios Turisticos/Poi_Page.dart	
@@ -1,21 +1,18 @@
 import 'package:flutter/material.dart';
+import 'package:proyectopersonal/Pages/ListadeSitios.dart';
 
-class Poi extends StatelessWidget {
-  const Poi({Key? key}) : super(key: key);
+class Poi1 extends StatelessWidget {
+  const Poi1({Key? key}) : super(key: key);
 
   @override
   Widget build(BuildContext context) {
     return MaterialApp(
       home: Scaffold(
-      body: Column(
-
-
-        children: [
+        body: Column(
+          children: [
           Container(
-
             width: 300,
             height: 80,
-
             margin: EdgeInsets.only(top: 70),
             child: Text("Parque Ecologico EL SALADO",
             style: TextStyle(
@@ -28,36 +25,47 @@
           ),
           Container(
               width: 300,
-                height: 300,
-
+                height: 200,
                 decoration: BoxDecoration(
                   image: DecorationImage(
                   image: AssetImage("Assets/Imagenes/ecoparque-el-salado.jpg")
                 ),
                 ),
-
               ),
 
              Container(
                 width: 350,
                 height: 300,
                 margin: EdgeInsets.only(left: 15,top: 10),
-
-                child: Text("Ciudad: Envigado"
-                    "                              "
-                    "Departamento: Antioquia"
-                    "                                   "
-                    "Temperatura: 25°"
-                    "                                         "
+                child: Text("Ciudad: Envigado\n"
+                    "Departamento: Antioquia\n"
+                    "Temperatura: 25°\n"
+                    "\n"
                     "Descripcion: El parque se encuentra ubicado en la zona rural de Envigado, sector El Salado, cuenta con 170.000 metros cuadrados de extensión,  que lo convierte en uno de los grandes parques ecológicos de Antioquia. "
                     "Cuenta con actividades de aventura: Canopy, muro de escalada y pruebas de habilidad. Un espacio para la diversión.",
                   style: TextStyle(
                     fontSize: 19,
                   ),
                 ),
-
               ),
-
+          Container(
+            child: ElevatedButton(
+                style: TextButton.styleFrom(
+                  backgroundColor: Colors.blue,
+                ),
+                child: Text("Volver",
+                  style:TextStyle(
+                      fontSize: 22,
+                      color: Colors.white,
+                      fontFamily: "contenidos"
+                  ),
+                ),
+                onPressed: (){
+                  Navigator.push(context, MaterialPageRoute(builder: (context) => Listas_de_Sitios())
+                  );
+                }
+                ),
+          )
         ],
       ),
       ),
